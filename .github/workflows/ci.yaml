name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Define permissions required for the workflow
permissions:
  contents: read # Allows checking out the repository code
  packages: write # Allows publishing Docker images to GitHub Container Registry
  # id-token: write # Needed for OIDC, but `packages: write` often implicitly handles enough for GHCR

env:
  # Define environment variables for registry and image names
  REGISTRY: ghcr.io
  # Image names will be: ghcr.io/mofe64/vulcan/api and ghcr.io/mofe64/vulcan/operator
  IMAGE_NAME_API: ${{ github.repository }}/api
  IMAGE_NAME_OPERATOR: ${{ github.repository }}/operator

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          # Using Go 1.24.4 as it's the latest stable release at the time of writing.
          go-version: "1.24.4"

      - name: Go work sync (for go.mod replace directives)
        # This step is crucial to ensure `go.work` properly resolves module paths
        # before running tests or building locally.
        run: go work sync
        working-directory: . # Run from the repository root

      - name: Run API tests
        # run tests in the 'api' directory
        run: go test ./...
        working-directory: api

      - name: Run Operator tests
        # run tests in the 'operator' directory
        # use make file to run tests
        # I'm not running e2e tests for now, but we can also run it with make
        run: |
          go mod tidy
          make test
        working-directory: operator

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }} # Uses the GitHub user who triggered the workflow
          password: ${{ secrets.GITHUB_TOKEN }} # Automatically provided token for authentication

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: . # The build context is the repository root to include 'go.work' and 'operator' directory
          file: ./api/Dockerfile # Path to the API's Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}:latest
          # Tag as latest and commit SHA
          # build-args are not strictly needed here as ENV in Dockerfile handles GOWORK

      - name: Build and push Operator image
        uses: docker/build-push-action@v5
        with:
          # The context for the operator is its own directory, as Kubebuilder Dockerfiles are usually self-contained.
          context: ./operator
          file: ./operator/Dockerfile # Path to the Operator's Dockerfile (assuming one exists)
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_OPERATOR }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_OPERATOR }}:latest
